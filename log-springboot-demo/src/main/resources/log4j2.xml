<?xml version="1.0" encoding="UTF-8"?>
<!-- refer to http://logging.apache.org/log4j/2.x/manual/configuration.html -->
<!--日志级别以及优先级排序: OFF > FATAL > ERROR > WARN > INFO > DEBUG > TRACE > ALL -->
<!--Configuration后面的status，这个用于设置log4j2自身内部的信息输出，可以不设置，当设置成trace时，你会看到log4j2内部各种详细输出 -->
<!--monitorInterval：Log4j能够自动检测修改配置 文件和重新配置本身，设置间隔秒数 -->
<configuration status="WARN" monitorInterval="30">

	<!-- 常量定义start -->
	<Properties>
		<!-- 默认日志输出格式 -->
		<property name="DEFAULT_PATTERN"
			value="%d{yyyy-MM-dd HH:mm:ss.SSS} [%-5level] [%thread] -[%logger{50}]-[%file:%line] - %msg%n" />
		<property name="HOSTNAME" value="${env:HOSTNAME:-notsetting}" />
		<property name="APPNAME" value="test" />
		<!-- ${sys:user.home}即用户HOME目录，等同于之前的${user.home} -->
		<!-- <property name="LOG_DIR" value="${sys:user.home}/logs/${APPNAME}" /> -->
		<property name="LOG_DIR" value="F:/home/logs/${APPNAME}" />
		<!-- RollingFile的最大size -->
		<property name="MAXSIZE" value="10 KB" />
		<!-- 常量定义end -->
	</Properties>

	<!--先定义所有的appender -->
	<appenders>
		<!--这个输出控制台的配置 -->
		<console name="Console" target="SYSTEM_OUT">
			<!--输出日志的格式 -->
			<PatternLayout pattern="${DEFAULT_PATTERN}" />
		</console>
		<!--文件会打印出所有信息，这个log每次运行程序会自动清空，由append属性决定，这个也挺有用的，适合临时测试用 -->
		<File name="log" fileName="F:/home/logs/${APPNAME}/${HOSTNAME}-${APPNAME}.log"
			append="false">
			<PatternLayout pattern="${DEFAULT_PATTERN}" />
		</File>
		<!-- 这个会打印出所有的info及以下级别的信息，每次大小超过size，则这size大小的日志会自动存入按年份-月份建立的文件夹下面并进行压缩，作为存档 -->
		<RollingFile name="RollingFileInfo" fileName="${LOG_DIR}/${HOSTNAME}-info.log"
			filePattern="${LOG_DIR}/$${date:yyyy-MM}/info-%d{yyyy-MM-dd}-%i.log">
			<!--控制台只输出level及以上级别的信息（onMatch），其他的直接拒绝（onMismatch） -->
			<ThresholdFilter level="info" onMatch="ACCEPT"
				onMismatch="DENY" />
			<PatternLayout pattern="${DEFAULT_PATTERN}" />
			<Policies>
				<TimeBasedTriggeringPolicy />
				<SizeBasedTriggeringPolicy size="${MAXSIZE}" />
			</Policies>
		</RollingFile>
		<RollingFile name="RollingFileWarn" fileName="${LOG_DIR}/${HOSTNAME}-warn.log"
			filePattern="${LOG_DIR}/$${date:yyyy-MM}/warn-%d{yyyy-MM-dd}-%i.log">
			<ThresholdFilter level="warn" onMatch="ACCEPT"
				onMismatch="DENY" />
			<PatternLayout pattern="${DEFAULT_PATTERN}" />
			<Policies>
				<TimeBasedTriggeringPolicy />
				<SizeBasedTriggeringPolicy size="${MAXSIZE}" />
			</Policies>
			<!-- DefaultRolloverStrategy属性如不设置，则默认为最多同一文件夹下7个文件，这里设置了20 -->
			<DefaultRolloverStrategy max="20" />
		</RollingFile>
		<RollingFile name="RollingFileError" fileName="${LOG_DIR}/${HOSTNAME}-error.log"
			filePattern="${LOG_DIR}/$${date:yyyy-MM}/error-%d{yyyy-MM-dd}-%i.log">
			<ThresholdFilter level="error" onMatch="ACCEPT"
				onMismatch="DENY" />
			<PatternLayout pattern="${DEFAULT_PATTERN}" />
			<Policies>
				<TimeBasedTriggeringPolicy />
				<SizeBasedTriggeringPolicy size="${MAXSIZE}" />
			</Policies>
		</RollingFile>
	</appenders>
	<!--然后定义logger，只有定义了logger并引入的appender，appender才会生效 -->
	<loggers>
		<!--过滤掉spring和mybatis的一些无用的DEBUG信息 -->
		<logger name="org.springframework" level="INFO"></logger>
		<logger name="org.mybatis" level="INFO"></logger>
		<root level="all">
			<appender-ref ref="Console" />
			<appender-ref ref="log" />
			<appender-ref ref="RollingFileInfo" />
			<appender-ref ref="RollingFileWarn" />
			<appender-ref ref="RollingFileError" />
		</root>
	</loggers>
</configuration>